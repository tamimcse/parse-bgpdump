Routes folder contains the routing table of different backbone routers. The routes are produced from the actual RIB snapshot of http://www.routeviews.org/routeviews/ (ftp://archive.routeviews.org/route-views.chicago/bgpdata/2019.08/RIBS/rib.20190824.2200.bz2 to be exact). Each RIB snapshots however contains routes from multiple peers (ISPs). Moreover the snapshots are in MRT format (not human headable). We extract the actual routing table from the RIB snopshot as following:

1. We use BGPdump (https://github.com/tamimcse/bgpdump) to convert the MRT file into a human readable text file. BGPdump has several output mode. Here we use output mode -m.
2. Then we use parse-bgpdump.sh to convert the bgpdump output file into routes-*. parse-bgpdump.sh internally uses parse-bgpdump.py which performs the actual conversion.

Note that here we replace the actual next-hop with veth0-veth31. We use following scripts to add/delete the routes to Linux.

addroutes.sh      --- Add routes to Linux
delroutes.sh      --- Delete routes from Linux

addroutes.sh and delroutes.sh internally use following files:
 
create-veths.py   --- Creates 32 veths on the machine
addroutes.py      --- 
delroutes.py      --- 


Moreover following scripts generates memory consumption for different FIB lookups for all the FIBs in ipv6-fibs folder:

ppc.sh                  ---  PPC where the FIBs split into level 16, 24, 32, 40, 48, 54, 64.
ppc-16-32-40-48-64.sh   ---  PPC where FIB is split into level 16, 32, 40, 48, 64

ppc-split-56.sh         ---  Memory consumption of  PPC where prefixes with 48-64 is divided into level 48, 56 and 64. It internally uses ppc-split-56.py
sail-split.sh           ---  Generates memory consumption for SAIL for all the FIBs in ipv6-fibs folder. It internally uses sail-split.py
poptrie-16.sh           ---  Memory consumption of Poptrie-16. It internally uses poptrie-16.py
poptrie-18.sh           ---  Memory consumption of Poptrie-18. It internally uses poptrie-18.py


